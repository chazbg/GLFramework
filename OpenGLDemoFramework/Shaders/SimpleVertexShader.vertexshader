#version 330 core
// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
uniform uint time;
uniform uint segments;
uniform float startAngle;
uniform float offsetAngle;
uniform float fillPercentage; // 0.0 - empty; 1.0 - full

smooth out vec3 inColor;

void main(){

    float step = 0.03;
    float thetaRot = time * step;
    mat3 rotation;
    rotation[0].xyz = vec3(cos(thetaRot), 0, sin(thetaRot));
    rotation[1].xyz = vec3(0, 1, 0);
    rotation[2].xyz = vec3(-sin(thetaRot), 0, cos(thetaRot));
    
    float theta =  startAngle - offsetAngle * float(vertexPosition_modelspace.y / segments) * fillPercentage;
    gl_Position.x = 0.25 * (2.0 -  vertexPosition_modelspace.x / 2.0) * cos(theta);
    gl_Position.y = 0.25 * (2.0 -  vertexPosition_modelspace.x / 2.0) * sin(theta);
    gl_Position.z = vertexPosition_modelspace.z / 8.0;
    gl_Position.xyz = rotation * gl_Position.xyz;
    gl_Position.w = 1.0;

    inColor.xyz = vec3(float(vertexPosition_modelspace.y / segments), float(vertexPosition_modelspace.y / segments), 0.0);
}

